name: Extensive UI Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      test_type:
        description: "Type of tests to run"
        required: true
        default: "all"
        type: choice
        options:
          - all
          - basic
          - complex
          - responsive
          - typography
          - tables
          - performance

jobs:
  setup-environment:
    runs-on: ubuntu-latest
    outputs:
      python-version: ${{ steps.setup-python.outputs.python-version }}
      chrome-version: ${{ steps.setup-chrome.outputs.chrome-version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Setup Chrome
        id: setup-chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: "latest"

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

  install-dependencies:
    needs: setup-environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ needs.setup-environment.outputs.python-version }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgconf-2-4 \
            libnss3 \
            libxss1 \
            libasound2 \
            libatk-bridge2.0-0 \
            libgtk-3-0 \
            libdrm2 \
            libxkbcommon0 \
            libxcomposite1 \
            libxdamage1 \
            libxrandr2 \
            libgbm1 \
            libasound2

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-html pytest-xdist pytest-cov
          pip install selenium webdriver-manager
          pip install beautifulsoup4 python-docx lxml

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.cache/selenium
          key: ${{ runner.os }}-deps-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-deps-

  basic-ui-tests:
    needs: [setup-environment, install-dependencies]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chrome, firefox]
        python-version: ["3.9", "3.10", "3.11"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup ${{ matrix.browser }}
        uses: browser-actions/setup-${{ matrix.browser }}@v1

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-html pytest-xdist pytest-cov
          pip install selenium webdriver-manager
          pip install beautifulsoup4 python-docx lxml

      - name: Run basic UI tests
        run: |
          python -m pytest tests/test_ui_extensive.py::TestExtensiveUI::test_basic_html_elements \
            --browser=${{ matrix.browser }} \
            --html=reports/basic-ui-${{ matrix.browser }}-${{ matrix.python-version }}.html \
            --self-contained-html \
            --verbose

      - name: Upload basic UI test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: basic-ui-results-${{ matrix.browser }}-${{ matrix.python-version }}
          path: reports/basic-ui-${{ matrix.browser }}-${{ matrix.python-version }}.html

  complex-css-tests:
    needs: [setup-environment, install-dependencies]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chrome, firefox]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Setup ${{ matrix.browser }}
        uses: browser-actions/setup-${{ matrix.browser }}@v1

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-html pytest-xdist pytest-cov
          pip install selenium webdriver-manager
          pip install beautifulsoup4 python-docx lxml

      - name: Run complex CSS tests
        run: |
          python -m pytest tests/test_ui_extensive.py::TestExtensiveUI::test_complex_css_styling \
            --browser=${{ matrix.browser }} \
            --html=reports/complex-css-${{ matrix.browser }}.html \
            --self-contained-html \
            --verbose

      - name: Upload complex CSS test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: complex-css-results-${{ matrix.browser }}
          path: reports/complex-css-${{ matrix.browser }}.html

  responsive-design-tests:
    needs: [setup-environment, install-dependencies]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        viewport: ["1920x1080", "1366x768", "768x1024", "375x667"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-html pytest-xdist pytest-cov
          pip install selenium webdriver-manager
          pip install beautifulsoup4 python-docx lxml

      - name: Run responsive design tests
        run: |
          python -m pytest tests/test_ui_extensive.py::TestExtensiveUI::test_responsive_design \
            --viewport=${{ matrix.viewport }} \
            --html=reports/responsive-${{ matrix.viewport }}.html \
            --self-contained-html \
            --verbose

      - name: Upload responsive design test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: responsive-results-${{ matrix.viewport }}
          path: reports/responsive-${{ matrix.viewport }}.html

  typography-tests:
    needs: [setup-environment, install-dependencies]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-html pytest-xdist pytest-cov
          pip install selenium webdriver-manager
          pip install beautifulsoup4 python-docx lxml

      - name: Run typography tests
        run: |
          python -m pytest tests/test_ui_extensive.py::TestExtensiveUI::test_typography_and_text_effects \
            --html=reports/typography-tests.html \
            --self-contained-html \
            --verbose

      - name: Upload typography test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: typography-results
          path: reports/typography-tests.html

  tables-forms-tests:
    needs: [setup-environment, install-dependencies]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chrome, firefox]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Setup ${{ matrix.browser }}
        uses: browser-actions/setup-${{ matrix.browser }}@v1

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-html pytest-xdist pytest-cov
          pip install selenium webdriver-manager
          pip install beautifulsoup4 python-docx lxml

      - name: Run tables and forms tests
        run: |
          python -m pytest tests/test_ui_extensive.py::TestExtensiveUI::test_tables_and_forms \
            --browser=${{ matrix.browser }} \
            --html=reports/tables-forms-${{ matrix.browser }}.html \
            --self-contained-html \
            --verbose

      - name: Upload tables and forms test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: tables-forms-results-${{ matrix.browser }}
          path: reports/tables-forms-${{ matrix.browser }}.html

  performance-tests:
    needs: [setup-environment, install-dependencies]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-html pytest-xdist pytest-cov
          pip install selenium webdriver-manager
          pip install beautifulsoup4 python-docx lxml
          pip install memory-profiler psutil

      - name: Run performance tests
        run: |
          python -m pytest tests/test_ui_extensive.py \
            --html=reports/performance-tests.html \
            --self-contained-html \
            --verbose \
            --durations=10 \
            --tb=short

      - name: Upload performance test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: performance-results
          path: reports/performance-tests.html

  accessibility-tests:
    needs: [setup-environment, install-dependencies]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-html pytest-xdist pytest-cov
          pip install selenium webdriver-manager
          pip install beautifulsoup4 python-docx lxml
          pip install axe-selenium-python

      - name: Run accessibility tests
        run: |
          python -m pytest tests/test_accessibility.py \
            --html=reports/accessibility-tests.html \
            --self-contained-html \
            --verbose

      - name: Upload accessibility test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: accessibility-results
          path: reports/accessibility-tests.html

  cross-browser-compatibility:
    needs: [setup-environment, install-dependencies]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chrome, firefox, edge]
        python-version: ["3.11"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup ${{ matrix.browser }}
        uses: browser-actions/setup-${{ matrix.browser }}@v1

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-html pytest-xdist pytest-cov
          pip install selenium webdriver-manager
          pip install beautifulsoup4 python-docx lxml

      - name: Run cross-browser tests
        run: |
          python -m pytest tests/test_ui_extensive.py \
            --browser=${{ matrix.browser }} \
            --html=reports/cross-browser-${{ matrix.browser }}.html \
            --self-contained-html \
            --verbose \
            --tb=short

      - name: Upload cross-browser test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cross-browser-results-${{ matrix.browser }}
          path: reports/cross-browser-${{ matrix.browser }}.html

  test-summary:
    needs:
      [
        basic-ui-tests,
        complex-css-tests,
        responsive-design-tests,
        typography-tests,
        tables-forms-tests,
        performance-tests,
        accessibility-tests,
        cross-browser-compatibility,
      ]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all test artifacts
        uses: actions/download-artifact@v3

      - name: Generate test summary
        run: |
          echo "# Extensive UI Test Results Summary" > test-summary.md
          echo "" >> test-summary.md
          echo "## Test Coverage" >> test-summary.md
          echo "- Basic HTML Elements: ✅" >> test-summary.md
          echo "- Complex CSS Styling: ✅" >> test-summary.md
          echo "- Responsive Design: ✅" >> test-summary.md
          echo "- Typography & Text Effects: ✅" >> test-summary.md
          echo "- Tables & Forms: ✅" >> test-summary.md
          echo "- Performance Testing: ✅" >> test-summary.md
          echo "- Accessibility Testing: ✅" >> test-summary.md
          echo "- Cross-Browser Compatibility: ✅" >> test-summary.md
          echo "" >> test-summary.md
          echo "## Browsers Tested" >> test-summary.md
          echo "- Chrome (Latest)" >> test-summary.md
          echo "- Firefox (Latest)" >> test-summary.md
          echo "- Edge (Latest)" >> test-summary.md
          echo "" >> test-summary.md
          echo "## Viewports Tested" >> test-summary.md
          echo "- Desktop: 1920x1080, 1366x768" >> test-summary.md
          echo "- Tablet: 768x1024" >> test-summary.md
          echo "- Mobile: 375x667" >> test-summary.md
          echo "" >> test-summary.md
          echo "## Python Versions Tested" >> test-summary.md
          echo "- Python 3.9" >> test-summary.md
          echo "- Python 3.10" >> test-summary.md
          echo "- Python 3.11" >> test-summary.md

      - name: Upload test summary
        uses: actions/upload-artifact@v3
        with:
          name: test-summary
          path: test-summary.md

  notify-results:
    needs: [test-summary]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download test summary
        uses: actions/download-artifact@v3
        with:
          name: test-summary

      - name: Display test summary
        run: |
          echo "## Extensive UI Test Results"
          cat test-summary/test-summary.md

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('test-summary/test-summary.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## 🧪 Extensive UI Test Results\n\n${summary}\n\n📊 All test artifacts are available in the Actions tab.`
            });
